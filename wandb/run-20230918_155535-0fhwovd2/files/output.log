2023-09-18 15:55:39,882 - root - INFO - Using device: cuda
2023-09-18 15:55:39,904 - root - INFO - Quadro M5000
2023-09-18 15:55:39,904 - root - INFO - Memory Usage:
2023-09-18 15:55:39,904 - root - INFO - Allocated: 0.0 GB
2023-09-18 15:55:39,905 - root - INFO - Cached: 0.0 GB
2023-09-18 15:55:40,064 - root - INFO - Preprocessing Internal_301_DB_layer3output dataset for train split.






100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 63210/63210 [00:14<00:00, 4478.32it/s]
Augmenting dataset: 63210it [00:00, 2208999.87it/s]
2023-09-18 15:55:57,904 - root - INFO - Preprocessing Internal_301_DB_layer3output dataset for test split.
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 6622/6622 [00:01<00:00, 6272.49it/s]
2023-09-18 15:55:59,186 - root - INFO - Preprocessing Internal_301_DB_layer3output dataset for validation split.
0it [00:00, ?it/s]
2023-09-18 15:55:59,189 - root - INFO - Concatenating train set
2023-09-18 15:56:02,283 - root - INFO - Concatenating test set
2023-09-18 15:56:02,387 - root - INFO - Concatenating validation set
2023-09-18 15:56:03,221 - root - INFO - CustomModel(
  (backbone): IsotropicBackBone(
    (backbone): Sequential(
      (0): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (1): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (2): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (3): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (4): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (5): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (6): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (7): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (8): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (9): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (10): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (11): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): EdgeConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
    )
  )
  (predictor): LinPredictor(
    (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))
    (lin1): Linear(in_features=1024, out_features=301, bias=True)
    (act): GELU(approximate='none')
    (softmax): Softmax(dim=1)
  )
)
2023-09-18 15:56:03,227 - root - INFO - Using device: cuda
2023-09-18 15:56:03,227 - root - INFO - Quadro M5000
2023-09-18 15:56:03,228 - root - INFO - Memory Usage:
2023-09-18 15:56:03,228 - root - INFO - Allocated: 0.3 GB
2023-09-18 15:56:03,228 - root - INFO - Cached: 0.3 GB
Epoch 1 Training:   0%|                                                                                                                        | 0/3951 [00:00<?, ?it/s]/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/site-packages/torch/nn/modules/conv.py:459: UserWarning: Applied workaround for CuDNN issue, install nvrtc.so (Triggered internally at /opt/conda/conda-bld/pytorch_1682343995622/work/aten/src/ATen/native/cudnn/Conv_v8.cpp:80.)
  return F.conv2d(input, weight, bias, self.stride,





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 1 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:04<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 256'
Arguments: ('train_true_positive_rate: 1.3455123222123586e-05', 'train_true_negative_rate: 0.9937327507685451', 'train_false_negative_rate: 0.003308804012990501', 'train_false_positive_rate: 0.0029449900952423')




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 2 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:01<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 233'
Arguments: ('train_true_positive_rate: 1.224626449513592e-05', 'train_true_negative_rate: 0.9934381045936106', 'train_false_negative_rate: 0.0033100128717174888', 'train_false_positive_rate: 0.0032396362701767717')




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 3 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:01<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 287'
Arguments: ('train_true_positive_rate: 1.5084454549802615e-05', 'train_true_negative_rate: 0.9934183423813782', 'train_false_negative_rate: 0.003307174681662822', 'train_false_positive_rate: 0.003259398482409266')





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 4 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:01<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 248'
Arguments: ('train_true_positive_rate: 1.3034650621432224e-05', 'train_true_negative_rate: 0.9934094598976885', 'train_false_negative_rate: 0.003309224485591192', 'train_false_positive_rate: 0.003268280966098871')


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 5 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:19:58<00:00,  1.21s/it]













































































































Validation:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 414/414 [04:02<00:00,  1.71it/s]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 271'
Arguments: ('train_true_positive_rate: 1.4243509348419891e-05', 'train_true_negative_rate: 0.9934564477108158', 'train_false_negative_rate: 0.0033080156268642047', 'train_false_positive_rate: 0.003221293152971611', 'validation_correct: 43', 'validation_true_positive_rate: 2.157311127410795e-05', 'validation_true_negative_rate: 0.9934352520692628', 'validation_false_negative_rate: 0.0033006860249385167', 'validation_false_positive_rate: 0.003242488794524644')































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 6 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:04<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 216'
Arguments: ('train_true_positive_rate: 1.1352760218666776e-05', 'train_true_negative_rate: 0.9934168181682006', 'train_false_negative_rate: 0.003310906375993958', 'train_false_positive_rate: 0.003260922695586772')






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 7 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:03<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 250'
Arguments: ('train_true_positive_rate: 1.3139768771605065e-05', 'train_true_negative_rate: 0.9934174488771016', 'train_false_negative_rate: 0.0033091193674410196', 'train_false_positive_rate: 0.003260291986685735')































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 8 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:04<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 256'
Arguments: ('train_true_positive_rate: 1.3455123222123586e-05', 'train_true_negative_rate: 0.9934110892290162', 'train_false_negative_rate: 0.003308804012990501', 'train_false_positive_rate: 0.003266651634771192')



























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 9 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:19:58<00:00,  1.21s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 318'
Arguments: ('train_true_positive_rate: 1.6713785877481642e-05', 'train_true_negative_rate: 0.9934130864738695', 'train_false_negative_rate: 0.003305545350335143', 'train_false_positive_rate: 0.003264654389917908')


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 10 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:19:54<00:00,  1.21s/it]
























































































































Validation:: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 414/414 [04:02<00:00,  1.71it/s]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 345'
Arguments: ('train_true_positive_rate: 1.813288090481499e-05', 'train_true_negative_rate: 0.9933963201289169', 'train_false_negative_rate: 0.0033041262553078097', 'train_false_positive_rate: 0.003281420734870476', 'validation_correct: 34', 'validation_true_positive_rate: 1.705780891441094e-05', 'validation_true_negative_rate: 0.9933875905443548', 'validation_false_negative_rate: 0.0033052013272982135', 'validation_false_positive_rate: 0.0032901503194325567')




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 11 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:19:59<00:00,  1.21s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 260'
Arguments: ('train_true_positive_rate: 1.3665359522469267e-05', 'train_true_negative_rate: 0.9933898028036062', 'train_false_negative_rate: 0.003308593776690155', 'train_false_positive_rate: 0.0032879380601811923')





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 12 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:00<00:00,  1.21s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 248'
Arguments: ('train_true_positive_rate: 1.3034650621432224e-05', 'train_true_negative_rate: 0.9933870171726266', 'train_false_negative_rate: 0.003309224485591192', 'train_false_positive_rate: 0.0032907236911607725')



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































Epoch 13 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████| 3951/3951 [1:20:13<00:00,  1.22s/it]
--- Logging error ---
Traceback (most recent call last):
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 1110, in emit
    msg = self.format(record)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 953, in format
    return fmt.format(record)
           ^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 687, in format
    record.message = record.getMessage()
                     ^^^^^^^^^^^^^^^^^^^
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/logging/__init__.py", line 377, in getMessage
    msg = msg % self.args
          ~~~~^~~~~~~~~~~
TypeError: not all arguments converted during string formatting
Call stack:
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 137, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 121, in main
    train(
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 208, in train
    logger.info(*[f"{k}: {v}" for k, v in log.items()])
Message: 'train_correct: 314'
Arguments: ('train_true_positive_rate: 1.650354957713596e-05', 'train_true_negative_rate: 0.9933864915818758', 'train_false_negative_rate: 0.0033057555866354885', 'train_false_positive_rate: 0.003291249281911637')

















































































Epoch 14 Training:   3%|███▍                                                                                                       | 129/3951 [02:42<1:20:14,  1.26s/it]