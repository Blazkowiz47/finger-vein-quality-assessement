Using device: cuda
Quadro M5000
Memory Usage:
Allocated: 0.0 GB
Cached:    0.0 GB
dpr [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
num_knn [9, 9, 10, 11, 12, 13, 13, 14, 15, 16, 17, 18]
IsoTropicVIG(
  (backbone): IsotropicBackBone(
    (backbone): Sequential(
      (0): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (1): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (2): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (3): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (4): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (5): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (6): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (7): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (8): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (9): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (10): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
      (11): Sequential(
        (0): Grapher(
          (fc1): Sequential(
            (0): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (graph_conv): DyGraphConv2d(
            (gconv): MRConv2d(
              (nn): BasicConv(
                (0): Conv2d(2048, 2048, kernel_size=(1, 1), stride=(1, 1), groups=4)
                (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): GELU(approximate='none')
              )
            )
            (dilated_knn_graph): DenseDilatedKnnGraph(
              (_dilated): DenseDilated()
            )
          )
          (fc2): Sequential(
            (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
        (1): FFN(
          (fc1): Sequential(
            (0): Conv2d(1024, 4096, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(4096, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (act): GELU(approximate='none')
          (fc2): Sequential(
            (0): Conv2d(4096, 1024, kernel_size=(1, 1), stride=(1, 1))
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (drop_path): Identity()
        )
      )
    )
  )
  (predictor): ConvPredictor(
    (predictor): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): GELU(approximate='none')
      (3): Dropout(p=0.0, inplace=False)
      (4): Conv2d(512, 600, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
2023-09-14 13:40:18,657 - root - INFO - Preprocessing MMCBNU6000 dataset for train split.
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4200/4200 [00:00<00:00, 4944.12it/s]
2023-09-14 13:40:19,887 - root - INFO - Preprocessing MMCBNU6000 dataset for test split.
0it [00:00, ?it/s]
2023-09-14 13:40:19,887 - root - INFO - Preprocessing MMCBNU6000 dataset for validation split.
100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1800/1800 [00:00<00:00, 6719.48it/s]
2023-09-14 13:40:20,235 - root - INFO - Concatenating train set
2023-09-14 13:40:20,506 - root - INFO - Concatenating test set
2023-09-14 13:40:20,507 - root - INFO - Concatenating validation set
Epoch 1 Training:   0%|                                                                                                        | 0/420 [00:00<?, ?it/s]/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/site-packages/torch/nn/modules/conv.py:459: UserWarning: Applied workaround for CuDNN issue, install nvrtc.so (Triggered internally at /opt/conda/conda-bld/pytorch_1682343995622/work/aten/src/ATen/native/cudnn/Conv_v8.cpp:80.)
  return F.conv2d(input, weight, bias, self.stride,












































































































Epoch 1 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:38<00:00,  1.93it/s]
















Validation::  98%|████████████████████████████████████████████████████████████████████████████████████████████████▊  | 176/180 [00:33<00:00,  5.13it/s]
Validation:: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.19it/s]












































































































Epoch 2 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:37<00:00,  1.93it/s]
















Validation:: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.33it/s]
train_correct: 96 validation_correct: 0












































































































Epoch 3 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:38<00:00,  1.92it/s]















Validation:: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.40it/s]
Epoch 4 Training:   0%|▏                                                                                               | 1/420 [00:00<03:35,  1.94it/s]











































































































Epoch 4 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:35<00:00,  1.95it/s]
















Validation::  99%|██████████████████████████████████████████████████████████████████████████████████████████████████▍| 179/180 [00:33<00:00,  5.35it/s]
Validation:: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.37it/s]












































































































Epoch 5 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:39<00:00,  1.91it/s]
















Validation:: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.26it/s]
Epoch 6 Training:   0%|                                                                                                        | 0/420 [00:00<?, ?it/s]














































































































Epoch 6 Training: 100%|██████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:41<00:00,  1.90it/s]
















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.22it/s]
Epoch 7 Training:   0%|                                                                                                                                          | 0/420 [00:00<?, ?it/s]













































































































Epoch 7 Training: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:39<00:00,  1.91it/s]
















Validation::  99%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌ | 178/180 [00:32<00:00,  5.45it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.41it/s]












































































































Epoch 8 Training: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:38<00:00,  1.92it/s]
















Validation::  97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎   | 175/180 [00:32<00:00,  5.16it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.33it/s]













































































































Epoch 9 Training: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:41<00:00,  1.90it/s]
















Validation::  97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌    | 174/180 [00:32<00:01,  5.21it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.32it/s]














































































































Epoch 10 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:41<00:00,  1.90it/s]
















Validation::  97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎   | 175/180 [00:33<00:00,  5.32it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.17it/s]
















































































































Epoch 11 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:47<00:00,  1.84it/s]


















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:37<00:00,  4.80it/s]
Epoch 12 Training:   0%|                                                                                                                                         | 0/420 [00:00<?, ?it/s]














































































































Epoch 12 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:40<00:00,  1.90it/s]
















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.20it/s]
Epoch 13 Training:   0%|▌                                                                                                                                | 2/420 [00:01<03:39,  1.90it/s]













































































































Epoch 13 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:41<00:00,  1.90it/s]

















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.18it/s]
Epoch 14 Training:   0%|▌                                                                                                                                | 2/420 [00:01<03:37,  1.92it/s]












































































































Epoch 14 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:38<00:00,  1.92it/s]


















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:37<00:00,  4.80it/s]
Epoch 15 Training:   0%|▌                                                                                                                                | 2/420 [00:01<03:51,  1.80it/s]













































































































Epoch 15 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:40<00:00,  1.90it/s]
















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.27it/s]
Epoch 16 Training:   0%|▎                                                                                                                                | 1/420 [00:00<03:40,  1.90it/s]












































































































Epoch 16 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:38<00:00,  1.92it/s]

















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.16it/s]
Epoch 17 Training:   0%|▌                                                                                                                                | 2/420 [00:01<03:33,  1.96it/s]










































































































Epoch 17 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:35<00:00,  1.95it/s]
















Validation::  97%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌    | 174/180 [00:32<00:01,  5.30it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.35it/s]













































































































Epoch 18 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:40<00:00,  1.91it/s]
















Validation::  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████   | 176/180 [00:33<00:00,  5.03it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:33<00:00,  5.30it/s]












































































































Epoch 19 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:37<00:00,  1.93it/s]
















Validation::  97%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎   | 175/180 [00:33<00:00,  5.30it/s]
Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:34<00:00,  5.22it/s]














































































































Epoch 20 Training: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 420/420 [03:41<00:00,  1.89it/s]

















Validation:: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:36<00:00,  4.88it/s]
Epoch 21 Training:   0%|▎                                                                                                                                | 1/420 [00:00<03:37,  1.93it/s]

















Epoch 21 Training:  15%|███████████████████▊                                                                                                            | 65/420 [00:34<03:10,  1.86it/s]
Traceback (most recent call last):
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 38, in <module>
    main()
  File "/home/a-150/work/finger-vein-quality-assessement/train.py", line 32, in main
    train(BATCH_SIZE, EPOCHS, ENVIRONMENT, LOG_ON_WANDB)
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/train.py", line 159, in train
    for metric in val_metrics:
  File "/home/a-150/anaconda3/envs/dl-torch/lib/python3.11/site-packages/torchmetrics/metric.py", line 457, in wrapped_func
    update(*args, **kwargs)
  File "/home/a-150/work/finger-vein-quality-assessement/common/train_pipeline/metric/accuracy.py", line -1, in update
KeyboardInterrupt